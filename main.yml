---

- name: Bootsrap the cluster
  hosts: cephnodes[0]
  gather_facts: false
  vars_prompt:
    - name: ireallymeanit
      prompt: |

            Are you sure you want to bootstrap the cluster ? Confirm that the user run the
            cephadm-purge-cluster.yml if there was an existing cluster

      default: 'no'
      private: no

  tasks:
    - name: exit playbook, if user did not mean to purge cluster
      fail:
        msg: |
            Exiting the  playbook...
      when: ireallymeanit != 'yes' 



- name: Setup the prerequirements
  become: true
  hosts: all
  any_errors_fatal: true
  vars_files:
    - passwords.yml
  tasks:
    - name: Create the "{{ username }}" at all nodes and distribute pub keys
      import_tasks: plays/createuser.yaml
      tags: precheck
       
    - name: Register the nodes to satellite or cdn
      import_tasks: plays/register.yaml
      tags: precheck

    - name: enable required repos
      import_tasks: plays/enablerepos.yaml
      tags: precheck

    - name: Install required packages and ensure important services are running
      import_tasks: plays/installpackages.yaml
      tags: precheck

    - name: check the public network communication
      command: ping -M do -s {{ public_mtu }} -c 1 {{ item }} 
      loop: "{{ groups['all'] }}"
      tags: precheck

    - name: check the cluster network communication
      command: ping -M do -s {{ cluster_mtu }} -c 1 {{ hostvars[item].clusterip }}
      loop: "{{ groups['all'] }}"
      when: clusternetwork is defined
      tags: precheck

    - name: check the ceph -s output
      shell: cephadm shell -- ceph -s
      register: ceph_exist
      failed_when: ceph_exist.rc == 0
      when: ansible_hostname in groups['cephnodes'][0]
      


    - name: run connected bootstrap at the at the first node
      shell: cephadm bootstrap --ssh-user {{ username }} --mon-ip {{ monip }} --cluster-network {{ clusternetwork }}  --ssh-private-key /home/{{ username }}/.ssh/id_rsa --ssh-public-key /home/{{ username }}/.ssh/id_rsa.pub  --registry-username {{ rhaccountpass }} --registry-password {{ rhaccountpass }}
      when: ansible_hostname in groups['cephnodes'][0] and installmethod == "cdn"
      register: dis_bootstrapoutput
      tags: bootstrap

    - debug: var=dis_bootstrapoutput
      tags: bootstrap    

    - name: Pause for 1 minute for bootstrap node become healthy
      pause:
        minutes: 1

    - name: Apply day2 ceph configs
      import_tasks: plays/cephconfigs.yaml
      tags: cephconfigs,test

